[tool.poetry]
authors = ["Hayden <hay-kot@pm.me>"]
description = "A Recipe Manager"
license = "AGPL"
name = "mealie"
version = "1.0.0b"

[tool.poetry.scripts]
start = "mealie.app:main"

[tool.poetry.dependencies]
Jinja2 = "^3.1.2"
Pillow = "^9.2.0"
PyYAML = "^5.3.1"
SQLAlchemy = "^2"
aiofiles = "^22.1.0"
alembic = "^1.7.5"
aniso8601 = "9.0.1"
appdirs = "1.4.4"
apprise = "^1.2.0"
bcrypt = "^4.0.1"
extruct = "^0.14.0"
fastapi = "^0.89.0"
gunicorn = "^20.1.0"
httpx = "^0.23.1"
lxml = "^4.7.1"
orjson = "^3.8.0"
passlib = "^1.7.4"
psycopg2-binary = {version = "^2.9.1", optional = true}
pydantic = "^1.10.4"
pyhumps = "^3.5.3"
pytesseract = "^0.3.9"
python = "^3.10"
python-dateutil = "^2.8.2"
python-dotenv = "^0.21.0"
python-jose = "^3.3.0"
python-ldap = "^3.3.1"
python-multipart = "^0.0.5"
python-slugify = "^8.0.0"
recipe-scrapers = "^14.26.0"
requests = "^2.25.1"
tzdata = "^2022.7"
uvicorn = {extras = ["standard"], version = "^0.20.0"}

[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
coverage = "^7.0"
coveragepy-lcov = "^0.1.1"
mkdocs-material = "^9.0.0"
mypy = "^0.991"
pre-commit = "^3.0.4"
pydantic-to-typescript = "^1.0.7"
pylint = "^2.6.0"
pytest = "^7.2.0"
pytest-asyncio = "^0.20.3"
rich = "^13.0.0"
ruff = "^0.0.241"
types-PyYAML = "^6.0.4"
types-python-dateutil = "^2.8.18"
types-python-slugify = "^6.0.0"
types-requests = "^2.27.12"
types-urllib3 = "^1.26.11"


[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.black]
line-length = 120
target-version = ["py310"]

[tool.vulture]
exclude = ["**/models/**/*.py", "dir/"]
ignore_decorators = ["@*router.*", "@app.on_event", "@validator", "@controller"]
make_whitelist = true
min_confidence = 60
paths = ["mealie"]
sort_by_size = true

[tool.pytest.ini_options]
addopts = "-ra -q"
minversion = "6.0"
python_classes = '*Tests'
python_files = 'test_*'
python_functions = 'test_*'
testpaths = [
  "tests",
]

[tool.coverage.report]
skip_empty = true

[tool.poetry.extras]
pgsql = ["psycopg2-binary"]

[tool.mypy]
follow_imports = "skip"
ignore_missing_imports = true
plugins = "pydantic.mypy"
python_version = "3.10"
strict_optional = true

[tool.ruff]
line-length = 120
format = "text"

# Enable Pyflakes `E` and `F` codes by default.
ignore = ["F403", "TID252","B008"]
select = [
  "E", # pycodestyles
  "F", # pyflakes
  "I", # isort
  "T", # flake8-print
  "UP", # pyupgrade
  "B", # flake8-bugbear
  # "ANN", # flake8-annotations
  # "C", # McCabe complexity
  # "RUF", # Ruff specific
  # "BLE", # blind-except
]

# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
  # TODO: Remove when match statement is supported by Ruff
  "mealie/services/scraper/cleaner.py"
]

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402","E501"]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
